{"ast":null,"code":"var _jsxFileName = \"/home/lucas/projeto/zebify/frontend/src/pages/profile.js\",\n  _process$env$REACT_AP,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/authContext\";\nimport { Navigate } from \"react-router-dom\";\nimport \"../css/style.css\";\nimport Footer from \"../components/footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = (_process$env$REACT_AP = process.env.REACT_APP_API_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : \"http://localhost:3001\";\nconst Profile = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const token = localStorage.getItem(\"token\");\n  const [meusPosts, setMeusPosts] = useState([]);\n  const [editando, setEditando] = useState(null);\n  const [novoConteudo, setNovoConteudo] = useState(\"\");\n  const [novaLegenda, setNovaLegenda] = useState(\"\");\n  const [utilizadores, setUtilizadores] = useState([]);\n  const [mostrarUtilizadores, setMostrarUtilizadores] = useState(false);\n  useEffect(() => {\n    if (!user) return;\n    const fetchMinhasPublicacoes = async () => {\n      try {\n        const res = await fetch(`${API}/api/my-posts`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error(await res.text());\n        const data = await res.json();\n        setMeusPosts(data);\n      } catch (err) {\n        console.error(\"Erro ao carregar publicações:\", err.message);\n      }\n    };\n    fetchMinhasPublicacoes();\n  }, [user, token]);\n  const carregarUtilizadores = async () => {\n    try {\n      const res = await fetch(`${API}/api/users/with-status`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setUtilizadores(data);\n    } catch (err) {\n      console.error(\"Erro ao carregar usuários:\", err.message);\n    }\n  };\n  const enviarPedido = async receiverId => {\n    try {\n      const res = await fetch(`${API}/api/friends/request`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          receiverId\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido de amizade enviado!\");\n      await carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro: \" + err.message);\n    }\n  };\n  const apagarPost = async id => {\n    if (!window.confirm(\"Tem certeza que deseja apagar esta publicação?\")) return;\n    try {\n      const res = await fetch(`${API}/api/posts/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) {\n        const erro = await res.json().catch(() => ({\n          error: \"Erro desconhecido\"\n        }));\n        throw new Error(erro.error);\n      }\n      setMeusPosts(meusPosts.filter(post => post.id !== id));\n    } catch (err) {\n      console.error(\"Erro ao deletar:\", err.message);\n      alert(\"Erro ao deletar: \" + err.message); // para exibir na interface\n    }\n  };\n  const iniciarEdicao = post => {\n    setEditando(post.id);\n    setNovoConteudo(post.conteudo || \"\");\n    setNovaLegenda(post.legenda || \"\");\n  };\n  const salvarEdicao = async id => {\n    try {\n      const res = await fetch(`${API}/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          conteudo: novoConteudo,\n          legenda: novaLegenda\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      setEditando(null);\n      setMeusPosts(prev => prev.map(post => post.id === id ? {\n        ...post,\n        conteudo: novoConteudo,\n        legenda: novaLegenda\n      } : post));\n    } catch (err) {\n      console.error(\"Erro ao editar:\", err.message);\n    }\n  };\n  const aceitarPedido = async senderId => {\n    try {\n      const res = await fetch(`${API}/api/friends/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          senderId\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido aceito!\");\n      carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao aceitar: \" + err.message);\n    }\n  };\n  const removerAmigo = async id => {\n    try {\n      const res = await fetch(`${API}/api/friends/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Amizade removida.\");\n      carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao remover amizade: \" + err.message);\n    }\n  };\n  const cancelarPedido = async receiverId => {\n    try {\n      const res = await fetch(`${API}/api/friends/request/${receiverId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido de amizade cancelado.\");\n      carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao cancelar pedido: \" + err.message);\n    }\n  };\n  const recusarPedido = async senderId => {\n    try {\n      const res = await fetch(`${API}/api/friends/reject`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          senderId\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido recusado.\");\n      await carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao recusar pedido: \" + err.message);\n    }\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meu Perfil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nome:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), \" \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (!mostrarUtilizadores) carregarUtilizadores();\n          setMostrarUtilizadores(!mostrarUtilizadores);\n        },\n        style: {\n          marginTop: \"20px\",\n          marginBottom: \"20px\"\n        },\n        children: mostrarUtilizadores ? \"Fechar lista de utilizadores\" : \"Ver utilizadores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), mostrarUtilizadores && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Utilizadores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), utilizadores.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: u.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), \" - \", u.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), u.status === \"amigos\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removerAmigo(u.id),\n            style: {\n              backgroundColor: \"red\",\n              color: \"white\"\n            },\n            children: \"Remover amigo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this), u.status === \"pendente\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancelarPedido(u.id),\n            children: \"Cancelar pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this), u.status === \"recebido\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => aceitarPedido(u.id),\n              style: {\n                backgroundColor: \"green\",\n                color: \"white\",\n                marginRight: \"8px\"\n              },\n              children: \"Aceitar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => recusarPedido(u.id),\n              style: {\n                backgroundColor: \"red\",\n                color: \"white\"\n              },\n              children: \"Recusar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), u.status === \"nenhum\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => enviarPedido(u.id),\n            children: \"Adicionar amigo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }, this)]\n        }, u.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        children: \"Minhas Publica\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), meusPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.tipo === \"imagem\" ? \"📷 Imagem\" : \"📝 Texto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), editando === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [post.tipo === \"texto\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: novoConteudo,\n            onChange: e => setNovoConteudo(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 19\n          }, this), post.tipo === \"imagem\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${API}/uploads/${post.imagem_path}`,\n              alt: \"imagem\",\n              style: {\n                width: \"100%\",\n                maxWidth: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: novaLegenda,\n              onChange: e => setNovaLegenda(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => salvarEdicao(post.id),\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditando(null),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [post.tipo === \"texto\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.conteudo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 43\n          }, this), post.tipo === \"imagem\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${API}/uploads/${post.imagem_path}`,\n              alt: \"imagem\",\n              style: {\n                width: \"100%\",\n                maxWidth: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.legenda\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(post.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => iniciarEdicao(post),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => apagarPost(post.id),\n            children: \"Apagar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Profile, \"YtOR3ZaAKMYzSNqpLg93+QKYcVE=\", false, function () {\n  return [useAuth];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","Navigate","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","API","_process$env$REACT_AP","process","env","REACT_APP_API_URL","Profile","_s","user","token","localStorage","getItem","meusPosts","setMeusPosts","editando","setEditando","novoConteudo","setNovoConteudo","novaLegenda","setNovaLegenda","utilizadores","setUtilizadores","mostrarUtilizadores","setMostrarUtilizadores","fetchMinhasPublicacoes","res","fetch","headers","Authorization","ok","Error","text","data","json","err","console","error","message","carregarUtilizadores","enviarPedido","receiverId","method","body","JSON","stringify","alert","apagarPost","id","window","confirm","erro","catch","filter","post","iniciarEdicao","conteudo","legenda","salvarEdicao","prev","map","aceitarPedido","senderId","removerAmigo","cancelarPedido","recusarPedido","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","className","name","email","onClick","style","marginTop","marginBottom","u","status","backgroundColor","color","marginRight","tipo","value","onChange","e","target","src","imagem_path","alt","width","maxWidth","type","Date","created_at","toLocaleString","_c","$RefreshReg$"],"sources":["/home/lucas/projeto/zebify/frontend/src/pages/profile.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/authContext\";\nimport { Navigate } from \"react-router-dom\";\nimport \"../css/style.css\";\nimport Footer from \"../components/footer\";\n\nconst API = process.env.REACT_APP_API_URL ?? \"http://localhost:3001\";\n\nconst Profile = () => {\n  const { user } = useAuth();\n  const token = localStorage.getItem(\"token\");\n\n  const [meusPosts, setMeusPosts] = useState([]);\n  const [editando, setEditando] = useState(null);\n  const [novoConteudo, setNovoConteudo] = useState(\"\");\n  const [novaLegenda, setNovaLegenda] = useState(\"\");\n\n  const [utilizadores, setUtilizadores] = useState([]);\n  const [mostrarUtilizadores, setMostrarUtilizadores] = useState(false);\n\n  useEffect(() => {\n    if (!user) return;\n\n    const fetchMinhasPublicacoes = async () => {\n      try {\n        const res = await fetch(`${API}/api/my-posts`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (!res.ok) throw new Error(await res.text());\n        const data = await res.json();\n        setMeusPosts(data);\n      } catch (err) {\n        console.error(\"Erro ao carregar publicações:\", err.message);\n      }\n    };\n\n    fetchMinhasPublicacoes();\n  }, [user, token]);\n\n  const carregarUtilizadores = async () => {\n    try {\n      const res = await fetch(`${API}/api/users/with-status`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!res.ok) throw new Error(await res.text());\n      const data = await res.json();\n      setUtilizadores(data);\n    } catch (err) {\n      console.error(\"Erro ao carregar usuários:\", err.message);\n    }\n  };\n\n  const enviarPedido = async (receiverId) => {\n    try {\n      const res = await fetch(`${API}/api/friends/request`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ receiverId }),\n      });\n\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido de amizade enviado!\");\n      await carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro: \" + err.message);\n    }\n  };\n\n const apagarPost = async (id) => {\n  if (!window.confirm(\"Tem certeza que deseja apagar esta publicação?\"))\n    return;\n\n  try {\n    const res = await fetch(`${API}/api/posts/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    if (!res.ok) {\n      const erro = await res.json().catch(() => ({ error: \"Erro desconhecido\" }));\n      throw new Error(erro.error);\n    }\n\n    setMeusPosts(meusPosts.filter((post) => post.id !== id));\n  } catch (err) {\n    console.error(\"Erro ao deletar:\", err.message);\n    alert(\"Erro ao deletar: \" + err.message); // para exibir na interface\n  }\n};\n\n\n  const iniciarEdicao = (post) => {\n    setEditando(post.id);\n    setNovoConteudo(post.conteudo || \"\");\n    setNovaLegenda(post.legenda || \"\");\n  };\n\n  const salvarEdicao = async (id) => {\n    try {\n      const res = await fetch(`${API}/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          conteudo: novoConteudo,\n          legenda: novaLegenda,\n        }),\n      });\n      if (!res.ok) throw new Error(await res.text());\n\n      setEditando(null);\n      setMeusPosts((prev) =>\n        prev.map((post) =>\n          post.id === id\n            ? { ...post, conteudo: novoConteudo, legenda: novaLegenda }\n            : post\n        )\n      );\n    } catch (err) {\n      console.error(\"Erro ao editar:\", err.message);\n    }\n  };\n\n  const aceitarPedido = async (senderId) => {\n    try {\n      const res = await fetch(`${API}/api/friends/accept`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ senderId }),\n      });\n\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido aceito!\");\n      carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao aceitar: \" + err.message);\n    }\n  };\n\n  const removerAmigo = async (id) => {\n    try {\n      const res = await fetch(`${API}/api/friends/${id}`, {\n        method: \"DELETE\",\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Amizade removida.\");\n      carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao remover amizade: \" + err.message);\n    }\n  };\n\n  const cancelarPedido = async (receiverId) => {\n    try {\n      const res = await fetch(`${API}/api/friends/request/${receiverId}`, {\n        method: \"DELETE\",\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido de amizade cancelado.\");\n      carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao cancelar pedido: \" + err.message);\n    }\n  };\n\n  const recusarPedido = async (senderId) => {\n    try {\n      const res = await fetch(`${API}/api/friends/reject`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ senderId }),\n      });\n\n      if (!res.ok) throw new Error(await res.text());\n      alert(\"Pedido recusado.\");\n      await carregarUtilizadores();\n    } catch (err) {\n      alert(\"Erro ao recusar pedido: \" + err.message);\n    }\n  };\n\n  if (!user) return <Navigate to=\"/login\" replace />;\n\n  return (\n    <>\n      <div className=\"profile-container\">\n        <h1>Meu Perfil</h1>\n        <p>\n          <strong>Nome:</strong> {user.name}\n        </p>\n        <p>\n          <strong>Email:</strong> {user.email}\n        </p>\n\n        <button\n          onClick={() => {\n            if (!mostrarUtilizadores) carregarUtilizadores();\n            setMostrarUtilizadores(!mostrarUtilizadores);\n          }}\n          style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n        >\n          {mostrarUtilizadores\n            ? \"Fechar lista de utilizadores\"\n            : \"Ver utilizadores\"}\n        </button>\n\n        {mostrarUtilizadores && (\n          <div>\n            <h3>Utilizadores</h3>\n            {utilizadores.map((u) => (\n              <div key={u.id} className=\"card\">\n                <p>\n                  <strong>{u.name}</strong> - {u.email}\n                </p>\n\n                {u.status === \"amigos\" && (\n                  <button\n                    onClick={() => removerAmigo(u.id)}\n                    style={{ backgroundColor: \"red\", color: \"white\" }}\n                  >\n                    Remover amigo\n                  </button>\n                )}\n\n                {u.status === \"pendente\" && (\n                  <button onClick={() => cancelarPedido(u.id)}>\n                    Cancelar pedido\n                  </button>\n                )}\n\n                {u.status === \"recebido\" && (\n                  <>\n                    <button\n                      onClick={() => aceitarPedido(u.id)}\n                      style={{\n                        backgroundColor: \"green\",\n                        color: \"white\",\n                        marginRight: \"8px\",\n                      }}\n                    >\n                      Aceitar\n                    </button>\n                    <button\n                      onClick={() => recusarPedido(u.id)}\n                      style={{ backgroundColor: \"red\", color: \"white\" }}\n                    >\n                      Recusar\n                    </button>\n                  </>\n                )}\n\n                {u.status === \"nenhum\" && (\n                  <button onClick={() => enviarPedido(u.id)}>\n                    Adicionar amigo\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n\n        <h2 style={{ marginTop: \"30px\" }}>Minhas Publicações</h2>\n        {meusPosts.map((post) => (\n          <div key={post.id} className=\"card\">\n            <h3>{post.tipo === \"imagem\" ? \"📷 Imagem\" : \"📝 Texto\"}</h3>\n\n            {editando === post.id ? (\n              <>\n                {post.tipo === \"texto\" && (\n                  <textarea\n                    value={novoConteudo}\n                    onChange={(e) => setNovoConteudo(e.target.value)}\n                  />\n                )}\n                {post.tipo === \"imagem\" && (\n                  <>\n                    <img\n                      src={`${API}/uploads/${post.imagem_path}`}\n                      alt=\"imagem\"\n                      style={{ width: \"100%\", maxWidth: \"300px\" }}\n                    />\n                    <input\n                      type=\"text\"\n                      value={novaLegenda}\n                      onChange={(e) => setNovaLegenda(e.target.value)}\n                    />\n                  </>\n                )}\n                <button onClick={() => salvarEdicao(post.id)}>Salvar</button>\n                <button onClick={() => setEditando(null)}>Cancelar</button>\n              </>\n            ) : (\n              <>\n                {post.tipo === \"texto\" && <p>{post.conteudo}</p>}\n                {post.tipo === \"imagem\" && (\n                  <>\n                    <img\n                      src={`${API}/uploads/${post.imagem_path}`}\n                      alt=\"imagem\"\n                      style={{ width: \"100%\", maxWidth: \"300px\" }}\n                    />\n                    <p>{post.legenda}</p>\n                  </>\n                )}\n                <small>{new Date(post.created_at).toLocaleString()}</small>\n                <br />\n                <button onClick={() => iniciarEdicao(post)}>Editar</button>\n                <button onClick={() => apagarPost(post.id)}>Apagar</button>\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}