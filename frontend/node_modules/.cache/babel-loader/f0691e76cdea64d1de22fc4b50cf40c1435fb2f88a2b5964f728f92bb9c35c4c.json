{"ast":null,"code":"var _jsxFileName = \"/home/lucas/projeto/zebify/frontend/src/components/newPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPost = ({\n  onPostSuccess\n}) => {\n  _s();\n  const [tipo, setTipo] = useState(\"texto\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [mensagem, setMensagem] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const handleSubmit = async () => {\n    if (!token) {\n      setMensagem(\"Você precisa estar logado para publicar.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"tipo\", tipo);\n    if (tipo === \"texto\") formData.append(\"conteudo\", content);\n    if (tipo === \"imagem\" && image) {\n      formData.append(\"imagem\", image);\n      formData.append(\"legenda\", caption);\n    }\n    try {\n      const res = await fetch(\"http://localhost:3001/posts\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMensagem(\"Post criado com sucesso!\");\n        setContent(\"\");\n        setImage(null);\n        setCaption(\"\");\n        if (onPostSuccess) onPostSuccess();\n      } else {\n        setMensagem(data.error || \"Erro ao publicar.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setMensagem(\"Erro ao conectar com o servidor.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"30px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Nova Publica\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTipo(\"texto\"),\n        disabled: tipo === \"texto\",\n        children: \"Texto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTipo(\"imagem\"),\n        disabled: tipo === \"imagem\",\n        children: \"Imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), tipo === \"texto\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"O que voc\\xEA est\\xE1 pensando?\",\n      rows: 4,\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), tipo === \"imagem\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Legenda\",\n        value: caption,\n        onChange: e => setCaption(e.target.value),\n        style: {\n          width: \"100%\",\n          marginTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Publicar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"V4zuzOJhR5G4n2Z/YjJB+jy054w=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPost","onPostSuccess","_s","tipo","setTipo","content","setContent","image","setImage","caption","setCaption","mensagem","setMensagem","token","localStorage","getItem","handleSubmit","formData","FormData","append","res","fetch","method","headers","Authorization","body","data","json","ok","error","err","console","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","onChange","e","target","placeholder","rows","width","type","accept","files","marginTop","color","_c","$RefreshReg$"],"sources":["/home/lucas/projeto/zebify/frontend/src/components/newPost.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst NewPost = ({ onPostSuccess }) => {\n  const [tipo, setTipo] = useState(\"texto\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [mensagem, setMensagem] = useState(\"\");\n\n  const token = localStorage.getItem(\"token\");\n\n  const handleSubmit = async () => {\n    if (!token) {\n      setMensagem(\"Você precisa estar logado para publicar.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"tipo\", tipo);\n    if (tipo === \"texto\") formData.append(\"conteudo\", content);\n    if (tipo === \"imagem\" && image) {\n      formData.append(\"imagem\", image);\n      formData.append(\"legenda\", caption);\n    }\n\n    try {\n      const res = await fetch(\"http://localhost:3001/posts\", {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${token}` },\n        body: formData,\n      });\n\n      const data = await res.json();\n\n      if (res.ok) {\n        setMensagem(\"Post criado com sucesso!\");\n        setContent(\"\");\n        setImage(null);\n        setCaption(\"\");\n        if (onPostSuccess) onPostSuccess();\n      } else {\n        setMensagem(data.error || \"Erro ao publicar.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setMensagem(\"Erro ao conectar com o servidor.\");\n    }\n  };\n\n  return (\n    <div style={{ marginBottom: \"30px\" }}>\n      <h3>Nova Publicação</h3>\n      <div style={{ marginBottom: \"10px\" }}>\n        <button onClick={() => setTipo(\"texto\")} disabled={tipo === \"texto\"}>\n          Texto\n        </button>\n        <button onClick={() => setTipo(\"imagem\")} disabled={tipo === \"imagem\"}>\n          Imagem\n        </button>\n      </div>\n\n      {tipo === \"texto\" && (\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"O que você está pensando?\"\n          rows={4}\n          style={{ width: \"100%\", marginBottom: \"10px\" }}\n        />\n      )}\n\n      {tipo === \"imagem\" && (\n        <>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => setImage(e.target.files[0])}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Legenda\"\n            value={caption}\n            onChange={(e) => setCaption(e.target.value)}\n            style={{ width: \"100%\", marginTop: \"10px\" }}\n          />\n        </>\n      )}\n\n      <button onClick={handleSubmit} style={{ marginTop: \"10px\" }}>\n        Publicar\n      </button>\n\n      {mensagem && <p style={{ color: \"green\" }}>{mensagem}</p>}\n    </div>\n  );\n};\n\nexport default NewPost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}