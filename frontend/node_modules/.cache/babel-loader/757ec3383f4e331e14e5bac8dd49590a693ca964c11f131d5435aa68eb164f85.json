{"ast":null,"code":"var _jsxFileName = \"/home/lucas/projeto/zebify/frontend/src/components/newPost.js\",\n  _process$env$REACT_AP,\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = (_process$env$REACT_AP = process.env.REACT_APP_API_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : \"http://localhost:3001\";\nconst NewPost = ({\n  onPostSuccess\n}) => {\n  _s();\n  const [tipo, setTipo] = useState(\"texto\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"public\");\n  const [mensagem, setMensagem] = useState(\"\");\n  const handleSubmit = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMensagem(\"Você precisa estar logado para publicar.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"tipo\", tipo);\n    formData.append(\"visibility\", visibility);\n    if (tipo === \"texto\") {\n      formData.append(\"conteudo\", content);\n    }\n    if (tipo === \"imagem\" && image) {\n      formData.append(\"imagem\", image);\n      formData.append(\"legenda\", caption);\n    }\n    try {\n      const res = await fetch(`${API}/api/posts`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!res.ok) {\n        const msg = (await res.json()).error || \"Erro ao publicar.\";\n        throw new Error(msg);\n      }\n      await res.json();\n      setMensagem(\"Post criado com sucesso!\");\n      setContent(\"\");\n      setImage(null);\n      setCaption(\"\");\n      setVisibility(\"public\");\n      if (onPostSuccess) onPostSuccess();\n    } catch (err) {\n      console.error(\"Erro ao publicar:\", err.message);\n      setMensagem(err.message || \"Erro ao conectar com o servidor.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"30px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Nova Publica\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"post-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"O que voc\\xEA est\\xE1 pensando?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"add-image-button\",\n        title: \"Adicionar imagem\",\n        children: \"\\uD83D\\uDCF7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"10px 0\",\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setVisibility(\"public\"),\n        style: {\n          padding: \"8px 16px\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\",\n          backgroundColor: visibility === \"public\" ? \"#007bff\" : \"#f0f0f0\",\n          color: visibility === \"public\" ? \"white\" : \"black\",\n          cursor: \"pointer\"\n        },\n        children: \"\\uD83C\\uDF0D P\\xFAblico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setVisibility(\"friends\"),\n        style: {\n          padding: \"8px 16px\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\",\n          backgroundColor: visibility === \"friends\" ? \"#28a745\" : \"#f0f0f0\",\n          color: visibility === \"friends\" ? \"white\" : \"black\",\n          cursor: \"pointer\"\n        },\n        children: \"\\uD83E\\uDD1D Apenas amigos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), tipo === \"texto\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"O que voc\\xEA est\\xE1 pensando?\",\n      rows: 4,\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), tipo === \"imagem\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Legenda\",\n        value: caption,\n        onChange: e => setCaption(e.target.value),\n        style: {\n          width: \"100%\",\n          marginTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Publicar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPost, \"L3w8mPe4ykDymcFlsRVf6b0pbQE=\");\n_c = NewPost;\nexport default NewPost;\n// O código acima é um componente React para criar novas postagens em uma rede social.\n// Ele permite que o usuário escolha entre postar texto ou imagem, defina a visibilidade (pública ou apenas amigos) e envie o conteúdo para o servidor.\n// O componente utiliza o estado local para gerenciar os dados do formulário e exibe mensagens de sucesso ou erro após a tentativa de publicação.\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","API","_process$env$REACT_AP","process","env","REACT_APP_API_URL","NewPost","onPostSuccess","_s","tipo","setTipo","content","setContent","image","setImage","caption","setCaption","visibility","setVisibility","mensagem","setMensagem","handleSubmit","token","localStorage","getItem","formData","FormData","append","res","fetch","method","headers","Authorization","body","ok","msg","json","error","Error","err","console","message","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","class","placeholder","title","margin","display","gap","type","onClick","padding","borderRadius","border","backgroundColor","color","cursor","value","onChange","e","target","rows","width","accept","files","marginTop","_c","$RefreshReg$"],"sources":["/home/lucas/projeto/zebify/frontend/src/components/newPost.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst API = process.env.REACT_APP_API_URL ?? \"http://localhost:3001\";\n\nconst NewPost = ({ onPostSuccess }) => {\n  const [tipo, setTipo] = useState(\"texto\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"public\");\n  const [mensagem, setMensagem] = useState(\"\");\n\n  const handleSubmit = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMensagem(\"Você precisa estar logado para publicar.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"tipo\", tipo);\n    formData.append(\"visibility\", visibility);\n    if (tipo === \"texto\") {\n      formData.append(\"conteudo\", content);\n    }\n    if (tipo === \"imagem\" && image) {\n      formData.append(\"imagem\", image);\n      formData.append(\"legenda\", caption);\n    }\n\n    try {\n      const res = await fetch(`${API}/api/posts`, {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${token}` },\n        body: formData,\n      });\n\n      if (!res.ok) {\n        const msg = (await res.json()).error || \"Erro ao publicar.\";\n        throw new Error(msg);\n      }\n\n      await res.json();\n      setMensagem(\"Post criado com sucesso!\");\n      setContent(\"\");\n      setImage(null);\n      setCaption(\"\");\n      setVisibility(\"public\");\n      if (onPostSuccess) onPostSuccess();\n    } catch (err) {\n      console.error(\"Erro ao publicar:\", err.message);\n      setMensagem(err.message || \"Erro ao conectar com o servidor.\");\n    }\n  };\n\n  return (\n    <div style={{ marginBottom: \"30px\" }}>\n      <h3>Nova Publicação</h3>\n\n      <div class=\"post-box\">\n        <textarea placeholder=\"O que você está pensando?\"></textarea>\n        <button class=\"add-image-button\" title=\"Adicionar imagem\">\n          📷\n        </button>\n      </div>\n\n      <div style={{ margin: \"10px 0\", display: \"flex\", gap: \"10px\" }}>\n        <button\n          type=\"button\"\n          onClick={() => setVisibility(\"public\")}\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: \"8px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: visibility === \"public\" ? \"#007bff\" : \"#f0f0f0\",\n            color: visibility === \"public\" ? \"white\" : \"black\",\n            cursor: \"pointer\",\n          }}\n        >\n          🌍 Público\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setVisibility(\"friends\")}\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: \"8px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: visibility === \"friends\" ? \"#28a745\" : \"#f0f0f0\",\n            color: visibility === \"friends\" ? \"white\" : \"black\",\n            cursor: \"pointer\",\n          }}\n        >\n          🤝 Apenas amigos\n        </button>\n      </div>\n\n      {tipo === \"texto\" && (\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"O que você está pensando?\"\n          rows={4}\n          style={{ width: \"100%\", marginBottom: \"10px\" }}\n        />\n      )}\n\n      {tipo === \"imagem\" && (\n        <>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => setImage(e.target.files[0])}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Legenda\"\n            value={caption}\n            onChange={(e) => setCaption(e.target.value)}\n            style={{ width: \"100%\", marginTop: \"10px\" }}\n          />\n        </>\n      )}\n\n      <button onClick={handleSubmit} style={{ marginTop: \"10px\" }}>\n        Publicar\n      </button>\n\n      {mensagem && <p style={{ color: \"green\" }}>{mensagem}</p>}\n    </div>\n  );\n};\n\nexport default NewPost;\n// O código acima é um componente React para criar novas postagens em uma rede social.\n// Ele permite que o usuário escolha entre postar texto ou imagem, defina a visibilidade (pública ou apenas amigos) e envie o conteúdo para o servidor.\n// O componente utiliza o estado local para gerenciar os dados do formulário e exibe mensagens de sucesso ou erro após a tentativa de publicação.\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}